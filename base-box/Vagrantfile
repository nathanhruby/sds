# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/bionic64"

  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get -y update
    sudo apt-get -y upgrade
    sudo apt-get -y install unzip golang-cfssl
  SHELL

  config.vm.provision "docker"

  config.vm.provision "file", source: "consul.service", destination: "/tmp/consul.service"
  config.vm.provision "file", source: "nomad.service", destination: "/tmp/nomad.service"
  config.vm.provision "file", source: "consul.json", destination: "/tmp/consul.json"
  config.vm.provision "file", source: "nomad.json", destination: "/tmp/nomad.json"
  config.vm.provision "shell", inline: <<-SHELL
    declare -A versions
    versions[consul]="1.6.2"
    versions[nomad]="0.10.2"
    for service in "${!versions[@]}" ; do 
      echo "Installing ${service^}..."
      mkdir /var/lib/${service}
      cd /tmp
      curl -sSL https://releases.hashicorp.com/${service}/${versions[$service]}/${service}_${versions[$service]}_linux_amd64.zip > ${service}.zip
      unzip /tmp/${service}.zip
      sudo install ${service} /usr/bin/${service}
      sudo mkdir -p /etc/${service}.d
      sudo chmod a+w /etc/${service}.d
      sudo mv ${service}.json /etc/${service}.d
      sudo mv ${service}.service /etc/systemd/system/${service}.service
      # don't enable the service, we'll do that after boot when our interfaces are there
      #sudo systemctl enable ${service}.service
    done
  SHELL

end